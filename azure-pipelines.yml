trigger:
  batch: true
  branches:
    include:
      - cccs-main

variables:
  m2RepoNodePath: /datadisks/disk1/.m2/repository

pool: cauldron-vmss

jobs:
  - job: PrepareNode
    displayName: Prepare the node for the Container Build
    steps:
      - checkout: none
      - bash: |
          mkdir -p ${{ variables.m2RepoNodePath }}
        displayName: Create required directories
  - job: ContainerBuild
    dependsOn: PrepareNode
    displayName: Maven Build (Container)
    variables:
      m2RepoContainerPath: /tmp/m2/repository
      JAVA_TOOL_OPTIONS: " -Xmx8g"
    container:
      image: uchimera.azurecr.io/cccs/dev/projector-intellij-ce:feature_update-to-431-mmrouet_20231031183145_b8080
      options: --entrypoint="" --user=0
      volumes:
        - "${{ variables.m2RepoNodePath }}:${{ variables.m2RepoContainerPath }}"
      endpoint: uchimera
    steps:
      - bash: |
          BRANCH_NAME=$(echo "$SYSTEM_PULLREQUEST_SOURCEBRANCH $BUILD_SOURCEBRANCH" | sed -r 's/^\s*(refs\/heads\/)?(\S*).*$/\2/' | sed 's/\//_/g')
          echo "##vso[task.setvariable variable=BRANCH_NAME]$BRANCH_NAME"
        displayName: Parse Source Control Branch Name
      - bash: |
          $(Build.SourcesDirectory)/mvnw clean install -e -DskipTests -pl '!:trino-docs' -Dmaven.repo.local=${{ variables.m2RepoContainerPath }}
        displayName: Maven build
  - job: DockerBuildnPush
    dependsOn: ContainerBuild
    displayName: Docker Image Build and Push to registry
    variables:
      containerRegistry: uchimera
      imageRepository: cccs/trino-base
      buildTimestamp: $[format('{0:yyyyMMddHHmmss}', pipeline.startTime)]
      DOCKER_BUILDKIT: 1
    steps:
      - bash: |
          BRANCH_NAME=$(echo "$SYSTEM_PULLREQUEST_SOURCEBRANCH $BUILD_SOURCEBRANCH" | sed -r 's/^\s*(refs\/heads\/)?(\S*).*$/\2/' | sed 's/\//_/g')
          echo "##vso[task.setvariable variable=BRANCH_NAME]$BRANCH_NAME"
        displayName: Parse Source Control Branch Name
      - bash: |
          cd $(Build.SourcesDirectory)/core/docker
          chmod +x ./build.sh
          ./build.sh -a amd64
          if [ $? -ne 0 ]; then
            echo "Docker build failed"
            exit 1
          fi
          cd $(Build.SourcesDirectory)
          TRINO_VERSION=$(./mvnw --quiet help:evaluate -Dexpression=project.version -DforceStdout)
          DOCKERFILE="FROM trino:${TRINO_VERSION}-amd64
          LABEL cccs.trino.upstream.version=${TRINO_VERSION}"
          DOCKERFILE_PATH=$(mktemp -d)/Dockerfile
          echo "${DOCKERFILE}" > "${DOCKERFILE_PATH}"
          echo "##vso[task.setvariable variable=DOCKERFILE_PATH]$DOCKERFILE_PATH"
        displayName: Docker build
      - task: Docker@2
        displayName: Login to ${{ variables.containerRegistry }}
        inputs:
          command: login
          containerRegistry: ${{ variables.containerRegistry }}
      - task: Docker@2
        displayName: Finalize, tag and push image to ${{ variables.containerRegistry }}
        inputs:
          command: buildAndPush
          containerRegistry: ${{ variables.containerRegistry }}
          repository: ${{ variables.imageRepository }}
          Dockerfile: $(DOCKERFILE_PATH)
          tags: |
            $(BRANCH_NAME)
            $(BRANCH_NAME)_$(buildTimestamp)_b$(Build.BuildId)
      - task: Docker@2
        displayName: Logout of ${{ variables.containerRegistry }}
        inputs:
          command: logout
          containerRegistry: ${{ variables.containerRegistry }}
        condition: always()
