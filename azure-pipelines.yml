trigger:
  batch: true
  branches:
    include:
      - cccs-main

variables:
  containerRegistry: uchimera
  imageRepository: cccs/trino-base
  buildTimestamp: $[format('{0:yyyyMMddHHmmss}', pipeline.startTime)]
  DOCKER_BUILDKIT: 1

pool:
  vmImage: ubuntu-latest

steps:
  - bash: |
      BRANCH_NAME=$(echo "$SYSTEM_PULLREQUEST_SOURCEBRANCH $BUILD_SOURCEBRANCH" | sed -r 's/^\s*(refs\/heads\/)?(\S*).*$/\2/' | sed 's/\//_/g')
      echo "##vso[task.setvariable variable=BRANCH_NAME]$BRANCH_NAME"
    displayName: Parse Source Control Branch Name
  - bash: $(Build.SourcesDirectory)/mvnw clean install -DskipTests
    displayName: Maven build
  - bash: |
      cd $(Build.SourcesDirectory)/core/docker
      ./build.sh
      if [ $? -ne 0 ]; then
        echo "Docker build failed"
        exit 1
      fi

      cd $(Build.SourcesDirectory)
      TRINO_VERSION=$(./mvnw --quiet help:evaluate -Dexpression=project.version -DforceStdout)

      DOCKERFILE="FROM trino:${TRINO_VERSION}-amd64
      LABEL cccs.trino.upstream.version=${TRINO_VERSION}"

      DOCKERFILE_PATH=$(mktemp -d)/Dockerfile
      echo "${DOCKERFILE}" > "${DOCKERFILE_PATH}"
      echo "##vso[task.setvariable variable=DOCKERFILE_PATH]$DOCKERFILE_PATH"
    displayName: Docker build
  - task: Docker@2
    displayName: Login to $(containerRegistry)
    inputs:
      command: login
      containerRegistry: $(containerRegistry)
  - task: Docker@2
    displayName: Finalize, tag and push image to $(containerRegistry)
    inputs:
      command: buildAndPush
      containerRegistry: $(containerRegistry)
      repository: $(imageRepository)
      Dockerfile: $(DOCKERFILE_PATH)
      tags: |
        $(BRANCH_NAME)
        $(BRANCH_NAME)_$(buildTimestamp)_b$(Build.BuildId)
  - task: Docker@2
    displayName: Logout of $(containerRegistry)
    inputs:
      command: logout
      containerRegistry: $(containerRegistry)
    condition: always()
