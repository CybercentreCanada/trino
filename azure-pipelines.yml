trigger:
  batch: true
  branches:
    include:
      - cccs-main

pool:
  vmImage: ubuntu-latest

variables:
  containerRegistry: uchimera
  imageRepository: cccs/trino-base
  buildTimestamp: $[format('{0:yyyyMMddHHmmss}', pipeline.startTime)]
  JAVA_TOOL_OPTIONS: " -Xmx8g"
  DOCKER_BUILDKIT: 1
container:
  image: uchimera.azurecr.io/cccs/dev/projector-intellij-ce:feature_update-to-434-mmrouet_20231219230126_b8481
  options: --entrypoint="" --user=0
  endpoint: uchimera

steps:
  - task: DownloadSecureFile@1
    name: download_cccs_stratus_m2_settings
    displayName: "Download settings.xml"
    inputs:
      secureFile: "cccs-stratus-m2-settings.xml"
  - task: Bash@3
    name: move_settings_to_m2_location
    displayName: Move settings to .m2
    inputs:
      targetType: "inline"
      script: |
        mkdir -p "${HOME}/.m2"
        cp "$(cccs_stratus_m2_settings.secureFilePath)" "${HOME}/.m2/settings.xml"
  - task: MavenAuthenticate@0
    name: authenticate_to_cccs_stratus
    displayName: Authentication to cccs-stratus maven artifacts feed
    inputs:
      artifactsFeeds: cccs-stratus
  - task: Bash@3
    name: set_branch_name
    displayName: Parse Source Control Branch Name
    inputs:
      targetType: 'inline'
      script: |
        BRANCH_NAME=$(echo "$SYSTEM_PULLREQUEST_SOURCEBRANCH $BUILD_SOURCEBRANCH" | sed -r 's/^\s*(refs\/heads\/)?(\S*).*$/\2/' | sed 's/\//_/g')
        echo "##vso[task.setvariable variable=BRANCH_NAME]$BRANCH_NAME"
  - task: Bash@3
    name: set_trino_version_and_build
    displayName: Set Trino version and Maven build
    inputs:
      targetType: 'inline'
      script: |
        TRINO_VERSION=$(./mvnw --quiet help:evaluate -Dexpression=project.version -DforceStdout)
        echo "##vso[task.setvariable variable=TRINO_VERSION]$TRINO_VERSION"
        echo "home directory listing"
        $(Build.SourcesDirectory)/mvnw clean install -e -DskipTests -pl '!:trino-docs' -Dmaven.repo.local=${{ variables.m2RepoContainerPath }}
  - task: Bash@3
    name: create_trino_docker_file
    displayName: Build Trino docker image
    inputs:
      targetType: 'inline'
      script: |
        cd $(Build.SourcesDirectory)/core/docker
        chmod g+w ${HOME}
        chmod ug+x ./build.sh
        ./build.sh -a amd64
        if [ $? -ne 0 ]; then
        echo "Docker build failed"
        exit 1
        fi
        cd $(Build.SourcesDirectory)
        DOCKERFILE="FROM trino:${TRINO_VERSION}-amd64
        LABEL cccs.trino.upstream.version=${TRINO_VERSION}"
        DOCKERFILE_PATH=$(mktemp -d)/Dockerfile
        echo "${DOCKERFILE}" > "${DOCKERFILE_PATH}"
        echo "##vso[task.setvariable variable=DOCKERFILE_PATH]$DOCKERFILE_PATH"
  - task: Docker@2
    name: container_registry_login
    displayName: Login to ${{ variables.containerRegistry }}
    inputs:
      command: login
      containerRegistry: ${{ variables.containerRegistry }}
  - task: Docker@2
    name: finish_tag_push_image_to_container
    displayName: Finalize, tag and push image to ${{ variables.containerRegistry }}
    inputs:
      command: buildAndPush
      containerRegistry: ${{ variables.containerRegistry }}
      repository: ${{ variables.imageRepository }}
      Dockerfile: $(DOCKERFILE_PATH)
      tags: |
        $(BRANCH_NAME)
        $(BRANCH_NAME)_$(buildTimestamp)_b$(Build.BuildId)
  - task: Docker@2
    name: container_registry_logout
    displayName: Logout of ${{ variables.containerRegistry }}
    inputs:
      command: logout
      containerRegistry: ${{ variables.containerRegistry }}
    condition: always()
